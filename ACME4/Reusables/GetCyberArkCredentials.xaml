<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetCredentials"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:cc="clr-namespace:Custom.CyberArk;assembly=Custom.CyberArk.GetAccountDetail"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_str_Password" Type="OutArgument(ss:SecureString)" />
    <x:Property Name="out_str_Username" Type="OutArgument(x:String)" />
    <x:Property Name="in_str_CredentialName" Type="InArgument(x:String)" />
    <x:Property Name="in_str_ApplicationID" Type="InArgument(x:String)" />
    <x:Property Name="in_str_CyberArkSafeName" Type="InArgument(x:String)" />
    <x:Property Name="in_str_CyberArkAccountID" Type="InArgument(x:String)" />
    <x:Property Name="in_str_CyberArkUsernameFormat" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetCredentials_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch sap2010:Annotation.AnnotationText="Usage: Change in_Credential to a previously created Windows credential and use outputs out_Username and out_Password. Description: This workflow securely fetches or creates and uses a set of credentials defined at it's input. It first tries to fetch them from CyberArk. Failing that, it tries to fetch them from the Windows credential manager. If they do not exist, it creates them and then outputs them. " DisplayName="Private: Try Get Credential Asset" sap2010:WorkflowViewState.IdRef="TryCatch_2">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:String" Name="str_Password" />
      <Variable x:TypeArguments="x:String" Name="str_expMsg" />
    </TryCatch.Variables>
    <TryCatch.Try>
      <Sequence DisplayName="Get App Credentials Sequence" sap2010:WorkflowViewState.IdRef="Sequence_10">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="str_rawApiRes" />
          <Variable x:TypeArguments="x:String" Name="str_Username" />
          <Variable x:TypeArguments="x:String" Name="str_AccountUsername" />
        </Sequence.Variables>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="Getting Application Credentials" />
        <Assign DisplayName="Initialize exp variable" sap2010:WorkflowViewState.IdRef="Assign_20">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_expMsg]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[in_str_ApplicationID]" DisplayName="Get Asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[str_Username]</OutArgument>
          </ui:GetRobotAsset.Value>
        </ui:GetRobotAsset>
        <Assign DisplayName="Get CyberArk Account Username" sap2010:WorkflowViewState.IdRef="Assign_19">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_AccountUsername]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_str_CyberArkUsernameFormat.Replace("{0}",str_Username)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Get Username" sap2010:WorkflowViewState.IdRef="Assign_18">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_str_Username]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[str_Username]</InArgument>
          </Assign.Value>
        </Assign>
        <cc:GetAccountDetail ResponseStatus="{x:Null}" AccountPassword="[str_Password]" AccountUsername="[str_AccountUsername]" CyberArkAccountID="[in_str_CyberArkAccountID]" CyberArkSafeName="[in_str_CyberArkSafeName]" DisplayName="Get account detail" Environment="PROD" ExceptionMessage="[str_expMsg]" sap2010:WorkflowViewState.IdRef="GetAccountDetail_1" RawResponseData="[str_rawApiRes]" />
        <If Condition="[str_expMsg=&quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_6">
          <If.Then>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="Got Credentials from CyberArk" />
          </If.Then>
          <If.Else>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[&quot;Error in Fetching CyberArk credentials: &quot;+str_expMsg]" />
              <Throw Exception="[new Exception(str_expMsg)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
            </Sequence>
          </If.Else>
        </If>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;CyberArk UserID: &quot;+out_str_Username]" />
        <Assign DisplayName="Make Secure Password" sap2010:WorkflowViewState.IdRef="Assign_16">
          <Assign.To>
            <OutArgument x:TypeArguments="ss:SecureString">[out_str_Password]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ss:SecureString">[new SecureString()]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="x:Char" CurrentIndex="{x:Null}" DisplayName="For each&lt;char&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[str_Password.ToCharArray]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Char">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Char" Name="key" />
              </ActivityAction.Argument>
              <InvokeMethod DisplayName="Invoke AppendChar" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="AppendChar">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="ss:SecureString">[out_str_Password]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:Char">[key]</InArgument>
              </InvokeMethod>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </Sequence>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <If Condition="[str_expMsg=&quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_10">
            <If.Then>
              <If Condition="[out_str_Username is Nothing or out_str_Password is Nothing]" DisplayName="Private: Fetch local" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Then>
                  <Sequence DisplayName="Private: Get from Credential Store" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="bln_credentialFound" />
                    </Sequence.Variables>
                    <ui:GetSecureCredential CredentialType="Generic" DisplayName="Get secure credential" sap2010:WorkflowViewState.IdRef="GetSecureCredential_2" Password="[out_str_Password]" PersistanceType="Enterprise" Result="[bln_credentialFound]" Target="[in_str_CredentialName]" Username="[out_str_Username]" />
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="Requesting and storing local Credentials" />
                    <If Condition="[bln_credentialFound]" DisplayName="If locally found" sap2010:WorkflowViewState.IdRef="If_8">
                      <If.Else>
                        <Sequence DisplayName="Private: Request and Store Credentials" sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <ui:RequestCredential DisplayName="Request Credential" sap2010:WorkflowViewState.IdRef="RequestCredential_3" Message="[&quot;Please provide &quot;&quot;&quot; + in_str_CredentialName + &quot;&quot;&quot; access credentials&quot;]" Password="[str_Password]" Result="[bln_credentialFound]" Title="Hello! This is Robot" Username="[out_str_Username]" />
                          <If Condition="[Not bln_credentialFound]" DisplayName="If cancelled" sap2010:WorkflowViewState.IdRef="If_7">
                            <If.Then>
                              <Sequence DisplayName="No credentials found steps" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="No credentials found" />
                                <Throw DisplayName="Throw No Credentials" Exception="[new Exception(&quot;Credentials not supplied&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Credentials found steps" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="Adding Credentials" />
                                <ui:AddCredential CredentialType="Generic" DisplayName="Add Credential" sap2010:WorkflowViewState.IdRef="AddCredential_3" Password="[str_Password]" PersistanceType="Enterprise" Target="[in_str_CredentialName]" Username="[out_str_Username]" />
                              </Sequence>
                            </If.Else>
                          </If>
                          <Assign DisplayName="Make Secure Password" sap2010:WorkflowViewState.IdRef="Assign_21">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ss:SecureString">[out_str_Password]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ss:SecureString">[new SecureString()]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:Char" CurrentIndex="{x:Null}" DisplayName="For each&lt;char&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[str_Password.ToCharArray]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:Char">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Char" Name="key" />
                                </ActivityAction.Argument>
                                <InvokeMethod DisplayName="Invoke AppendChar" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="AppendChar">
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="ss:SecureString">[out_str_Password]</InArgument>
                                  </InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="x:Char">[key]</InArgument>
                                </InvokeMethod>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Then>
              </If>
            </If.Then>
            <If.Else>
              <Throw Exception="[new Exception(str_expMsg)]" sap2010:WorkflowViewState.IdRef="Throw_4" />
            </If.Else>
          </If>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
    <TryCatch.Finally>
      <Sequence DisplayName="Return" sap2010:WorkflowViewState.IdRef="Sequence_8" />
    </TryCatch.Finally>
    <sads:DebugSymbol.Symbol>d25DOlxVc2Vyc1wwOTI1MDY5M1xEb2N1bWVudHNcVWlQYXRoXFBlcHNpQ29DaXRpemVuRnJhbWV3b3JrIC0gVmVyc2lvbiAyLjBcRnJhbWV3b3JrXEdldEN5YmVyQXJrQ3JlZGVudGlhbHMueGFtbFhWA/MBDgIBAVwHpgESAgFE8AEH8AFVAgFDrgEL6wEQAgECYglimgEDAYABYwlsEgIBfG0JcRwCAXdyCXkSAgFxegmBARICAWyCAQmCAYoDAgFfgwEJjQEOAgFUjgEJjgGrAQIBUY8BCZYBEgIBTZcBCaUBFgIBRa4BGa4BNAIBA7ABD+YBFAIBB+kBD+kBagIBBWJ2YpcBAwGBAWkPaT4CAX9lNWVBAgF9bzVvQwIBem06bVICAXh3NHdvAgF0dDV0SgIBcn80f0ICAW98NXxHAgFtggH2AoIBhwMCAWqCAUiCAVgCAWiCAWmCAYABAgFmggGiAoIBsAICAWSCAZMBggGvAQIBYoIBwQGCAdwBAgFggwEXgwEyAgFVhQENhQGcAQIBXYgBDYsBGAIBV44Bdo4BqAECAVKUATuUAU8CAVCRATyRAU4CAU6XAZ4BlwG6AQIBS50BD6IBHgIBRrABHbABWwIBCLIBE+QBHgIBC+kBIOkBPQIBBoUBeoUBmQECAV6JAQ+JAcQBAgFaigEPigFqAgFYoQE2oQE7AgFJnwFBnwFTAgFHtgEVtgG9AgIBOrcBFbcBrwECATi4ARXjARoCAQyJAX6JAcEBAgFbigEgigE9AgFZtgGDArYBnAICAUG2AaYCtgG6AgIBP7YB5AG2AfsBAgE9tgGrAbYBvwECATu3AYIBtwGsAQIBObgBI7gBOgIBDboBGeEBJAIBD7sBG7sB+AICAS68ARvJASACARzKARvRASQCARjSARvgASgCARC7AZABuwGBAgIBNrsB4QK7AfUCAgE0uwGjArsBugICATK7AcECuwHXAgIBMbsBiwK7AZsCAgEvvAEpvAFEAgEdvgEfwQEqAgEpxAEfxwEqAgEfzwFNzwFhAgEbzAFOzAFgAgEZ0gGwAdIBzAECARbYASHdATACARG/ASG/AagBAgEswAEhwAG5AQIBKsUBIcUBpQECASfGASHGAZMCAgEg3AFI3AFNAgEU2gFT2gFlAgESvwGPAb8BpQECAS3AAVXAAYwBAgErxQGOAcUBogECASjGAdkBxgHyAQIBJcYB/AHGAZACAgEjxgGkAcYBtAECASE=</sads:DebugSymbol.Symbol>
  </TryCatch>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="675,22" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="GetAccountDetail_1" sap:VirtualizedContainerService.HintSize="675,22" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="675,425" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="675,266" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="697,1641">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetSecureCredential_2" sap:VirtualizedContainerService.HintSize="844,22" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="844,91" />
      <sap2010:ViewStateData Id="RequestCredential_3" sap:VirtualizedContainerService.HintSize="697,22" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddCredential_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="697,425" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="697,60" />
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="697,266" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="719,1017">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="844,1165" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="866,1482">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="991,1630">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="1216,1778">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="701,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="200,99">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="715,1940">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetCredentials_1" sap:VirtualizedContainerService.HintSize="755,2020" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>