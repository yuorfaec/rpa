<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Main Process with all activities for process." DisplayName="Main Sequence Process - Invokes all subprocess " sap2010:WorkflowViewState.IdRef="Sequence_43">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
    </Sequence.Variables>
    <TryCatch sap2010:Annotation.AnnotationText="Handling any exception in complete process in Main scope. This Try catch should not be deleted." DisplayName="Try Catch - Main Process" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Name="str_ScreenshotFilepath" />
        <Variable x:TypeArguments="x:Boolean" Name="bln_InitAllSettingsStatus" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Flowchart sap2010:Annotation.AnnotationText="Main will invoke all other activities. We should avoid writing code here . We should only invoke xaml's here. Arguments should also not be in Main. Only variables should be here.Developer can add or delete variables here based on process requirement. " DisplayName="Main Flowchart - Contains all workflows " sap2010:WorkflowViewState.IdRef="Flowchart_2">
          <Flowchart.Variables>
            <Variable x:TypeArguments="x:String" Name="str_ConfigFilePath" />
            <Variable x:TypeArguments="x:String" Name="str_BotID" />
            <Variable x:TypeArguments="ss:SecureString" Name="str_BotPassword" />
          </Flowchart.Variables>
          <Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_14">
              <Sequence sap2010:Annotation.AnnotationText="This process will Read Config file and will assign values to Dictionary. Dictionary values then will be assigned to variables in Main.xaml. This xaml should not be deleted." DisplayName="InitAllSettings" sap2010:WorkflowViewState.IdRef="Sequence_41">
                <Assign DisplayName="Set InitAllSettings Flag" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[bln_InitAllSettingsStatus]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Reading Config file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets" />
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                    <InOutArgument x:TypeArguments="x:String" x:Key="io_str_ConfigFile">[str_ConfigFilePath]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_53" Level="Info" Message="Read config file" />
                <Assign DisplayName="Set InitAllSettings Flag" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[bln_InitAllSettingsStatus]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_15">
                  <Sequence sap2010:Annotation.AnnotationText="This process will use to Kill applications . Application name will be provided in KillApplicationList variable in Config file for process those needs to be Killed. This xaml should not be deleted. " DisplayName="KillProcess" sap2010:WorkflowViewState.IdRef="Sequence_38">
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke  KillProcess workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\KillProcess.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_16">
                      <Sequence sap2010:Annotation.AnnotationText="All applications you are using login credentials, invoke in this xaml. If it has separate credentials for each appliation, please invoke GetCyberArkCredentials.xaml for each application credentials. " DisplayName="GetAppCredentials" sap2010:WorkflowViewState.IdRef="Sequence_55">
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Bot credentials will be retrieved from CyberArk" DisplayName="Get CyberArk Credentials workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Reusables\GetCyberArkCredentials.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_str_Password">[str_BotPassword]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_str_Username">[str_BotID]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_str_CredentialName">[Config("BotCredential").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_str_ApplicationID">[Config("BotID").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_str_CyberArkSafeName">[Config("CyberArkBotSafeName").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_str_CyberArkAccountID">[Config("CyberArkBotAccountID").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_str_CyberArkUsernameFormat">[Config("CyberArkBotUsernameFormat").ToString]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="All applications you need to initialise before start further actions by Bot. Those can be initialise in this xaml. This is only a placeholder. Not any code provided in framework.  If it has many activities, please create separate xamls for each application to get start and invoke those xamls here. If this is not useful for process , developer can delete this invoke workflow avtivity from Main.xaml." DisplayName="InitAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_str_AppUsername">[str_BotID]</InArgument>
                              <InArgument x:TypeArguments="ss:SecureString" x:Key="in_str_AppPassword">[str_BotPassword]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                              <Sequence sap2010:Annotation.AnnotationText="Process specific code will be here from Citizen Developers. Developer can have one or many xaml based on process requirement. All these xamls will be in Process folder provided in framework." DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                <TryCatch DisplayName="Try catch - Process" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                  <TryCatch.Try>
                                    <Sequence DisplayName="Process specific workflows invoke" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_62" Level="Info" Message="Process steps started." />
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Process Core Logics should be invoked here" DisplayName="Invoke Process Workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Process.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Exception Sequence" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_63" Level="Error" Message="[&quot;System error in Process: &quot;+exception.Message]" />
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Used to Add Technical Exception Log in Summary File" DisplayName="Invoke Add Summary Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Reusables\AddLogInSummaryFile.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_CurrentDate">[DateTime.Now.ToString("MM/dd/yyyy hh:mm:ss")]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_WorkItemName">ProcessStep1</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_Status">Failed: Technical Exception</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_Reason">[exception.Message]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                    <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Business Exception Sequence" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                          <ui:LogMessage DisplayName="Log App Initialization message" sap2010:WorkflowViewState.IdRef="LogMessage_64" Level="Error" Message="[&quot;Encountered Business Exception in Process: &quot;+exception.Message]" />
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Used to Add Business Exception Log in Summary File" DisplayName="Invoke Add Summary Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Reusables\AddLogInSummaryFile.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_CurrentDate">[DateTime.Now.ToString("MM/dd/yyyy hh:mm:ss")]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_WorkItemName">ProcessStep1</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_Status">Failed: Business Exception</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_str_Reason">[exception.Message]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                  <TryCatch.Finally>
                                    <Sequence DisplayName="Process Completion Notification" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="str_CurrentDate" />
                                        <Variable x:TypeArguments="sd:DataTable" Name="dt_FinalSummaryDT" />
                                        <Variable x:TypeArguments="x:String" Name="str_CurrentDayLogs" />
                                      </Sequence.Variables>
                                      <ui:ReadRange AddHeaders="True" DataTable="[dt_FinalSummaryDT]" DisplayName="Read Summary Log" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[Config(&quot;SummaryLogSheetName&quot;).ToString]" WorkbookPath="[Config(&quot;SummaryLogFile&quot;).ToString]">
                                        <ui:ReadRange.Range>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:ReadRange.Range>
                                      </ui:ReadRange>
                                      <Assign DisplayName="Get Current Date" sap2010:WorkflowViewState.IdRef="Assign_14">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[str_CurrentDate]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("MM/dd/yyyy")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:FilterDataTable DataTable="[dt_FinalSummaryDT]" DisplayName="Filter Current Date Logs" FilterRowsMode="Keep" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_FinalSummaryDT]" SelectColumnsMode="Keep">
                                        <ui:FilterDataTable.Filters>
                                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                            <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                              <ui:FilterOperationArgument.Column>
                                                <InArgument x:TypeArguments="x:String">["Date"]</InArgument>
                                              </ui:FilterOperationArgument.Column>
                                              <ui:FilterOperationArgument.Operand>
                                                <InArgument x:TypeArguments="x:String">[str_CurrentDate]</InArgument>
                                              </ui:FilterOperationArgument.Operand>
                                            </ui:FilterOperationArgument>
                                          </scg:List>
                                        </ui:FilterDataTable.Filters>
                                        <ui:FilterDataTable.SelectColumns>
                                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                                            <x:Null />
                                          </scg:List>
                                        </ui:FilterDataTable.SelectColumns>
                                      </ui:FilterDataTable>
                                      <ui:OutputDataTable DataTable="[dt_FinalSummaryDT]" DisplayName="Convert Logs to Text Format" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[str_CurrentDayLogs]" />
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Process Summary Mail Notification" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Framework\SendEmailNotification.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="io_filePath" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">[Config("SuccessMail_ToAddress").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_EmailCC">[Config("SuccessMail_CCAddress").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Environment">[Config("Environment").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_SMTPServer">[Config("SMTPServer").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_SMTPPort">[Config("SMTPPort").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_SMTPEmail">[Config("SMTPUsername").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_SMTPPassword">[Config("SMTPPassword").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_EmailBCC" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_EmailFrom">[Config("SMTPUsername").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Message" />
                                          <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CustomException" />
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </TryCatch.Finally>
                                </TryCatch>
                              </Sequence>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="All applications you need to close when other actions are performed by Bot. Those can be close in this xaml. This is only a placeholder. Not any code provided in framework.  If it has many activities, please create separate xamls for each application  and invoke those xamls here. If this is not useful for process , developer can delete this invoke workflow activity from Main.xaml." DisplayName="CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </Flowchart.StartNode>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
          <x:Reference>__ReferenceID5</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Exception Steps" sap2010:WorkflowViewState.IdRef="Sequence_44">
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_56" Level="Error" Message="[&quot;Main - Encountered Technical Exception: &quot;+exception.Message]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Technical Exception Mail Notification" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Framework\SendEmailNotification.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="io_filePath">[Config("ErrorScreenshotFolder").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">[Config("TechnicalExceptionMail_ToAddress").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailCC">[Config("TechnicalExceptionMail_CCAddress").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Environment">[Config("Environment").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SMTPServer">[Config("SMTPServer").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SMTPPort">[Config("SMTPPort").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SMTPEmail">[Config("SMTPUsername").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SMTPPassword">[Config("SMTPPassword").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailBCC" />
                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailFrom">[Config("SMTPUsername").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Message" />
                  <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[exception]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_CustomException" />
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_5">
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Exception Steps" sap2010:WorkflowViewState.IdRef="Sequence_57">
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_65" Level="Error" Message="[&quot;Main - Encountered Business Exception: &quot;+exception.Message]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Business Exception Mail Notification" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="Framework\SendEmailNotification.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="io_filePath">[Config("ErrorScreenshotFolder").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">[Config("BusinessExceptionMail_ToAddress").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailCC">[Config("BusinessExceptionMail_CCAddress").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Environment">[Config("Environment").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SMTPServer">[Config("SMTPServer").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SMTPPort">[Config("SMTPPort").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SMTPEmail">[Config("SMTPUsername").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SMTPPassword">[Config("SMTPPassword").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailBCC" />
                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailFrom">[Config("SMTPUsername").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Message" />
                  <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[exception]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_CustomException" />
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Killing all process - At end of Process" sap2010:WorkflowViewState.IdRef="Sequence_46">
          <Sequence sap2010:Annotation.AnnotationText="Killing all process at end of Bot process completed." DisplayName="KillProcess  - Invokes KillProcess workflow" sap2010:WorkflowViewState.IdRef="Sequence_45">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_58" Level="Info" Message="Entering into Kill Process" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke  KillProcess workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Framework\KillProcess.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_59" Level="Info" Message="Exit from Kill Process" />
          </Sequence>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_57" Level="Info" Message="Main Process Completed." />
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d1lDOlxVc2Vyc1wwOTI1MDY5M1xEb2N1bWVudHNcVWlQYXRoXFBlcHNpQ29DaXRpemVuRnJhbWV3b3JrIC0gVmVyc2lvbiAyLjAgLSBDb3B5XE1haW4ueGFtbIoBSAPyAg4CAQFMBfACEAIBAlIJpgIVAgFF4wIJ7gIUAgE5rgINwgIYAgEdygIN3gIYAgEDWg9zGgMBtwF2E3weAwGyAX8XiwEiAwGhAY4BG5QBMwMBmQGXAR+MAioCAUiPAiOTAjsCAUbkAgvsAhYCATztAgvtApUBAgE6rwIPrwLLAQIBNrACD8ECJwIBHssCD8sCygECARvMAg/dAicCAQRbEWIaAwHEAWMRaSkDAb4BahFqlAEDAbwBaxFyGgMBuAF3FXstAwGzAYABGYoBMQMBogGRAWiRAXkDAZ8BkAFhkAFsAwGdAZIBcpIBegMBmwGOAYYFjgGqBQMBmgGYASGLAiwCAUmPAv0EjwKiBQIBR+UCDeUCmgECAUPmAg3qAiUCAT/rAg3rApYBAgE97QJ57QKSAQIBO68Cfq8CyAECATe1AlG1AnECATS5AlK5AnMCATK7Ak+7AnACATC2AlC2Am8CAS60Ak20AoIBAgEstwJOtwJrAgEqsgJOsgJ4AgEovQJSvQJdAgEmvwJmvwJuAgEkswJNswKCAQIBIrAC1AGwAvoBAgEhuAJPuAJwAgEfywJ+ywLHAQIBHNECUdECcQIBGdUCUtUCcwIBF9cCT9cCcAIBFdICUNICbwIBE9ACTdACgQECARHTAk7TAmsCAQ/OAk7OAngCAQ3ZAlLZAl0CAQzbAmbbAm4CAQrPAk3PAoEBAgEIzALTAcwC+QECAQfUAk/UAnACAQVgPWBCAwHHAV0+XVkDAcUBZmpmcgMBwgFnWWdtAwHAAWO9AWPdAQMBvwFqf2qRAQMBvQFwPXBBAwG7AW0+bVkDAbkBeWx5dAMBtQF3ygF35gEDAbQBiAFqiAGYAQMBsAGEAWKEAYQBAwGuAYYBZIYBjAEDAawBggFlggF2AwGqAYABpwKAAc4CAwGpAYMBXoMBaQMBpwGHAWWHAY4BAwGlAYUBYYUBewMBowGaASWhATADAZIBzgEliQIwAgFkqQEptQE0AgFWvQEpyQE0AgFK5QJ75QKXAQIBROgCZOgCbAIBQeYCwgHmAt4BAgFA6wJ76wKTAQIBPpsBJ5sBsAEDAZcBnAEnoAE/AwGTAdQBJ9oBNgMBigHbASfiATADAYYB4wEn9QE8AgF+9gEn9gHXAQIBefcBJ4gCPwIBZaoBK6oB2AECAWGrASuzAUMCAVi0ASu0AWICAVe+ASu+Af0BAgFUvwErxwFDAgFMyAEryAFiAgFLmwGVAZsBrQEDAZgBngF+ngGGAQMBlQGcAaYCnAG0AgMBlAHUAVHUAWYDAZAB1wEt1wFcAwGPAdQBvgHUAfIBAwGNAdQBgALUAa8CAwGLAeABUuABdwMBiQHdAVPdAWQDAYcB6AFY6AFgAwGFAesBWOsBaQMBgwHjAdwB4wHxAQMBgQHjAUXjAVoCAX/2Ab4B9gHUAQIBfPYBRfYBWgIBevwBafwBiQECAXeAAmqAAosBAgF1ggJnggKIAQIBc/0BaP0BhwECAXH7AWX7AY8BAgFv/gFm/gGDAQIBbYYCfoYChgECAWv6AWX6AY8BAgFp9wHoAfcBjgICAWj/AWf/AYgBAgFmqgGaAaoB1QECAWKwAWywAYcBAgFgrwFyrwF+AgFfsQFssQF/AgFdrQGCAa0BigECAVuuAXGuAZ8BAgFaqwGyAqsB1gICAVm+Aa0BvgH6AQIBVcQBbMQBhgECAVPDAXLDAX4CAVLFAWzFAX8CAVHBAYIBwQGKAQIBT8IBccIBnwECAU6/AbECvwHVAgIBTQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_53" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_30" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_62" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_29" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_63" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_34" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="336,404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_64" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_35" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Rethrow_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="336,404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="404,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="FilterDataTable_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="OutputDataTable_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_36" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="336,599">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="418,2138">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_16" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,564.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,474.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">360,525.5 360,564.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,384.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">360,435.5 360,474.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,294.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">360,345.5 360,384.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,204.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">360,255.5 360,294.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,114.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">360,165.5 360,204.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="738,904">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">330,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Width">724</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">360,77.5 360,114.5</av:PointCollection>
            <x:Double x:Key="Height">867.5</x:Double>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_56" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_37" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="742,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_65" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_38" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_57" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="742,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_58" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_17" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_59" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_57" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_46" sap:VirtualizedContainerService.HintSize="336,306">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="756,2283">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="778,2407">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="818,2487">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>